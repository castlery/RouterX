# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
# fastlane_version '1.66.0'

desc 'Run tests'
lane :test do |options|
  if scheme = options[:scheme]
    scan(scheme: scheme, clean: true, code_coverage: true)
  else
    test_all_schemes
  end
end

desc 'Run tests to all schemes'
lane :test_all_schemes do
  scan(scheme: 'RouterX iOS', clean: true, code_coverage: true)
  scan(scheme: 'RouterX OSX', clean: true, code_coverage: true)
  scan(scheme: 'RouterX tvOS', clean: true, code_coverage: true)

  sh('killall Simulator')
end

desc 'Build for Carthage'
lane :carthage_lint do
  sh('cd .. && carthage build --no-skip-current && cd fastlane')
end

desc 'Lint for Cocoapods'
lane :pod_lint do
  sh('cd .. && pod lib lint && cd fastlane')
end

desc 'Lint'
lane :lint do
  carthage_lint
  pod_lint
end

desc 'Release new version'
lane :release do |options|
  target_version = options[:version]
  abort 'The version is missed. Use `fastlane release version:{version_number}`.' if target_version.nil?

  ensure_git_branch
  ensure_git_status_clean

  test_all_schemes

  sync_build_number_to_git
  increment_version_number(version_number: target_version)
  version_bump_podspec(path: 'RouterX.podspec', version_number: target_version)

  lint

  git_commit_all(message: "Bump version to #{target_version}")
  add_git_tag tag: target_version
  push_to_git_remote

  set_github_release(
    repository_name: 'castlery/RouterX',
    api_token: ENV['GITHUB_TOKEN'],
    name: target_version,
    tag_name: target_version,
    description: "RouterX #{target_version}"
  )

  pod_push
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
